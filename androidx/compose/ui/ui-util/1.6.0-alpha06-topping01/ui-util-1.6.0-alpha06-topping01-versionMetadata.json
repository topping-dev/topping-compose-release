[{"class":"androidx.compose.ui.util.MathHelpersKt","addedIn":"1.0.0","methods":[{"method":"lerp(float,float,float)","addedIn":"1.0.0"},{"method":"lerp(long,long,float)","addedIn":"1.0.0"},{"method":"lerp(int,int,float)","addedIn":"1.0.0"}],"fields":[]},{"class":"androidx.compose.ui.ExperimentalComposeUiApi","addedIn":"1.6.0-alpha06-topping01","methods":[],"fields":[]},{"class":"androidx.compose.ui.util.AndroidTrace_androidKt","addedIn":"1.0.0","methods":[{"method":"trace<T>(java.lang.String,kotlin.jvm.functions.Function0<? extends T>)","addedIn":"1.0.0"}],"fields":[]},{"class":"androidx.compose.ui.util.IdEmpty","addedIn":"1.6.0-alpha06-topping01","methods":[{"method":"IdEmpty()","addedIn":"1.6.0-alpha06-topping01"}],"fields":[{"field":"Companion","addedIn":"1.6.0-alpha06-topping01"}]},{"class":"androidx.compose.ui.InternalComposeUiApi","addedIn":"1.6.0-alpha06-topping01","methods":[],"fields":[]},{"class":"androidx.compose.ui.util.InlineClassHelperKt","addedIn":"1.0.0","methods":[{"method":"unpackInt2(long)","addedIn":"1.0.0"},{"method":"unpackFloat1(long)","addedIn":"1.0.0"},{"method":"packFloats(float,float)","addedIn":"1.0.0"},{"method":"unpackInt1(long)","addedIn":"1.0.0"},{"method":"packInts(int,int)","addedIn":"1.0.0"},{"method":"unpackFloat2(long)","addedIn":"1.0.0"}],"fields":[]},{"class":"androidx.compose.ui.util.IdEmpty.Companion","addedIn":"1.6.0-alpha06-topping01","methods":[{"method":"getValue()","addedIn":"1.6.0-alpha06-topping01"}],"fields":[]},{"class":"androidx.compose.ui.util.StringKt","addedIn":"1.6.0-alpha06-topping01","methods":[{"method":"formatCommon(java.lang.String,java.lang.Object...)","addedIn":"1.6.0-alpha06-topping01"}],"fields":[]},{"class":"androidx.compose.ui.util.ListUtilsKt","addedIn":"1.0.0","methods":[{"method":"fastSumBy<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Integer>)","addedIn":"1.0.0"},{"method":"fastMapTo<T, R, C extends java.util.Collection<? super R>>(java.util.List<? extends T>,C,kotlin.jvm.functions.Function1<? super T,? extends R>)","addedIn":"1.0.0"},{"method":"fastMaxOfOrNull<T, R extends java.lang.Comparable<? super R>>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastForEach<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,kotlin.Unit>)","addedIn":"1.0.0"},{"method":"fastFilterNotNull<T>(java.util.List<? extends T>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastMap<T, R>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends R>)","addedIn":"1.0.0"},{"method":"fastFilter<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Boolean>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastJoinToString<T>(java.util.List<? extends T>,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1<? super T,? extends java.lang.CharSequence>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastLastOrNull<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Boolean>)","addedIn":"1.5.0"},{"method":"fastFold<T, R>(java.util.List<? extends T>,R,kotlin.jvm.functions.Function2<? super R,? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastMapIndexed<T, R>(java.util.List<? extends T>,kotlin.jvm.functions.Function2<? super java.lang.Integer,? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastMaxBy<T, R extends java.lang.Comparable<? super R>>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends R>)","addedIn":"1.0.0"},{"method":"fastForEachIndexed<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function2<? super java.lang.Integer,? super T,kotlin.Unit>)","addedIn":"1.0.0"},{"method":"fastMapIndexedNotNull<T, R>(java.util.List<? extends T>,kotlin.jvm.functions.Function2<? super java.lang.Integer,? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastAll<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Boolean>)","addedIn":"1.0.0"},{"method":"fastFirst<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Boolean>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastFirstOrNull<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Boolean>)","addedIn":"1.0.0"},{"method":"fastZip<T, R, V>(java.util.List<? extends T>,java.util.List<? extends R>,kotlin.jvm.functions.Function2<? super T,? super R,? extends V>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastAny<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,java.lang.Boolean>)","addedIn":"1.0.0"},{"method":"fastDistinctBy<T, K>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends K>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastForEachReversed<T>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,kotlin.Unit>)","addedIn":"1.4.0"},{"method":"fastMinByOrNull<T, R extends java.lang.Comparable<? super R>>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastMapNotNull<T, R>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastReduce<S, T extends S>(java.util.List<? extends T>,kotlin.jvm.functions.Function2<? super S,? super T,? extends S>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastZipWithNext<T, R>(java.util.List<? extends T>,kotlin.jvm.functions.Function2<? super T,? super T,? extends R>)","addedIn":"1.6.0-alpha06-topping01"},{"method":"fastFlatMap<T, R>(java.util.List<? extends T>,kotlin.jvm.functions.Function1<? super T,? extends java.lang.Iterable<? extends R>>)","addedIn":"1.6.0-alpha06-topping01"}],"fields":[]}]